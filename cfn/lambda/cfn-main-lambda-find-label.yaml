AWSTemplateFormatVersion: '2010-09-09'
Description: Project Mighty Lambda Function - Find Label

Parameters:
  ClientName:
    Type: String
    Description: --REQUIRED-- Name of the Client. Abbreviated client name (e.g. aabg) in lower case letters - this must be all one word alphanumeric
    Default: aabg
    MinLength: 1
    MaxLength: 20
    AllowedPattern: ^[a-zA-Z0-9]*$
    ConstraintDescription: must only contain letters (uppercase and lowercase) and numbers
  ProductName:
    Type: String
    Description: --REQUIRED-- Name of the Product (e.g. artemis|kinetic) in lower case letters - this must be all one word alphanumeric
    Default: '8675309'
    MinLength: 1
    MaxLength: 10
    AllowedPattern: ^[a-zA-Z0-9]*$
    ConstraintDescription: must only contain letters (uppercase and lowercase) and numbers  
  ModuleName:
    Type: String
    Description: --REQUIRED--  Please enter the name of the module in lower case letters (e.g. kernel)
  ModuleVersion:
    Type: String
    Description: --REQUIRED-- Name of the version (e.g. v1-0-0)
  LambdaFunctionName:
    Type: String
    Description: Lambda Function Name
  S3BucketName:
    Type: String
    Description: S3 Bucket to Upload Lambda Code
  S3BucketToInvokeLambda:
    Type: String
    Description: Bucket name which will invoke this lambda
  IAMRoleStackName:
    Type: String
    Description: Name of the stack containing required IAM Roles
    Default: project-mighty-iam-roles-stack

Resources:
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Join ["-", [!Ref ClientName, !Ref ProductName, !Ref AWS::Region, !Ref ModuleName, !Ref LambdaFunctionName]]
      Handler: findlabelsfromImage.handler
      Environment:
        Variables:
          lambda_function: aabg-mighty-us-east-1-lambda-send-message
      Role: !ImportValue
        Fn::Sub: "${IAMRoleStackName}-LambdaArn"
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: lambda_function_findlabels.zip
      Runtime: nodejs16.x

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaFunction
      Principal: s3.amazonaws.com
      SourceArn: !Join ['', ['arn:aws:s3:::', !Ref S3BucketToInvokeLambda]]
  
Outputs:
  LambdaFunctionArn:
    Value: !GetAtt LambdaFunction.Arn
